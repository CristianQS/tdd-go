// Code generated by MockGen. DO NOT EDIT.
// Source: ILogger.go

// Package mock_pkg is a generated GoMock package.
package pkg

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockILogger is a mock of ILogger interface.
type MockILogger struct {
	ctrl     *gomock.Controller
	recorder *MockILoggerMockRecorder
}

// MockILoggerMockRecorder is the mock recorder for MockILogger.
type MockILoggerMockRecorder struct {
	mock *MockILogger
}

// NewMockILogger creates a new mock instance.
func NewMockILogger(ctrl *gomock.Controller) *MockILogger {
	mock := &MockILogger{ctrl: ctrl}
	mock.recorder = &MockILoggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockILogger) EXPECT() *MockILoggerMockRecorder {
	return m.recorder
}

// log mocks base method.
func (m *MockILogger) log(message string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "log", message)
}

// log indicates an expected call of log.
func (mr *MockILoggerMockRecorder) log(message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "log", reflect.TypeOf((*MockILogger)(nil).log), message)
}
