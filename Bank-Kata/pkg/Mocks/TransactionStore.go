// Code generated by MockGen. DO NOT EDIT.
// Source: ../Infraestructure/TransactionStore.go

// Package mock_Infraestructure is a generated GoMock package.
package Mocks

import (
	pkg "bankkata/pkg/Model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTransactionStore is a mock of TransactionStore interface.
type MockTransactionStore struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionStoreMockRecorder
}

// MockTransactionStoreMockRecorder is the mock recorder for MockTransactionStore.
type MockTransactionStoreMockRecorder struct {
	mock *MockTransactionStore
}

// NewMockTransactionStore creates a new mock instance.
func NewMockTransactionStore(ctrl *gomock.Controller) *MockTransactionStore {
	mock := &MockTransactionStore{ctrl: ctrl}
	mock.recorder = &MockTransactionStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransactionStore) EXPECT() *MockTransactionStoreMockRecorder {
	return m.recorder
}

// AddDeposit mocks base method.
func (m *MockTransactionStore) AddDeposit(amount int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddDeposit", amount)
}

// AddDeposit indicates an expected call of AddDeposit.
func (mr *MockTransactionStoreMockRecorder) AddDeposit(amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddDeposit", reflect.TypeOf((*MockTransactionStore)(nil).AddDeposit), amount)
}

// AddWithdraw mocks base method.
func (m *MockTransactionStore) AddWithdraw(amount int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AddWithdraw", amount)
}

// AddWithdraw indicates an expected call of AddWithdraw.
func (mr *MockTransactionStoreMockRecorder) AddWithdraw(amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddWithdraw", reflect.TypeOf((*MockTransactionStore)(nil).AddWithdraw), amount)
}

// GetTransactions mocks base method.
func (m *MockTransactionStore) GetTransactions() []*pkg.Transaction {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactions")
	ret0, _ := ret[0].([]*pkg.Transaction)
	return ret0
}

// GetTransactions indicates an expected call of GetTransactions.
func (mr *MockTransactionStoreMockRecorder) GetTransactions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactions", reflect.TypeOf((*MockTransactionStore)(nil).GetTransactions))
}
